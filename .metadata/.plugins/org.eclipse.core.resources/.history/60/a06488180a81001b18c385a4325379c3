package com.scotiathon.voucher.helper;

import java.util.HashSet;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.scotiathon.voucher.entity.BusinessUnit;
import com.scotiathon.voucher.entity.GetBuAndVoucherId;
import com.scotiathon.voucher.repository.BussinessUnitRepository;
import com.scotiathon.voucher.repository.SuccessfulVoucherRepository;

@Component
public class ValidationHelper {

	@Autowired
	private BussinessUnitRepository bussinessUnitRepository;

	@Autowired
	private SuccessfulVoucherRepository successfulVoucherRepository;

	public boolean validateBussinessUnit(String businessUnitCode) {
		List<BusinessUnit> businessUnitCodes = bussinessUnitRepository.findAll();
		return businessUnitCodes.stream().anyMatch(businessUnit -> businessUnit.getBu().equals(businessUnitCode));
	}

	public HashSet<String> validateDuplicateResultsInDatabase() {
		List<GetBuAndVoucherId> passedVouchers = successfulVoucherRepository.selectBuAndVoucherIdForDuplicates();
		HashSet<String> uniqueValues = new HashSet<>();
		passedVouchers.forEach(passedVoucher -> uniqueValues.add(passedVoucher.getBu() + passedVoucher.getVoucherId()));
		for (GetBuAndVoucherId string : passedVouchers) {
			if((string.getBu()+string.getVoucherId()).equals("100010")){
				System.out.println(uniqueValues.contains("100010"));
				try {
					TimeUnit.SECONDS.sleep(120);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
		
		return uniqueValues;

	}

}
