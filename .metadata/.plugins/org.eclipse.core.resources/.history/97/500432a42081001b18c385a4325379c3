package com.scotiathon.voucher.service.impl;

import java.io.Writer;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;

import org.springframework.stereotype.Service;

import com.opencsv.bean.ColumnPositionMappingStrategy;
import com.opencsv.bean.HeaderColumnNameTranslateMappingStrategy;
import com.opencsv.bean.StatefulBeanToCsv;
import com.opencsv.bean.StatefulBeanToCsvBuilder;
import com.scotiathon.voucher.dto.VoucherDTO;
import com.scotiathon.voucher.entity.FailedVoucher;
import com.scotiathon.voucher.service.GenerateReport;

import lombok.extern.java.Log;

@Log
@Service
public class GenerateReportToCSV implements GenerateReport {

	@Override
	public void generateFailureReport(List<FailedVoucher> failedVouchers) {
		try (Writer writer = Files
				.newBufferedWriter(Paths.get("C:\\Users\\s5268554\\Desktop\\Failure_report\\report.csv"))) {
			ColumnPositionMappingStrategy<FailedVoucher> mappingStrategy = new ColumnPositionMappingStrategy<>();
			HeaderColumnNameTranslateMappingStrategy<FailedVoucher> strategy = new HeaderColumnNameTranslateMappingStrategy<>();
			mappingStrategy.setType(FailedVoucher.class);
			strategy.setColumnMapping(mappingForCSV());

			StatefulBeanToCsvBuilder<FailedVoucher> builder = new StatefulBeanToCsvBuilder<>(writer);
			StatefulBeanToCsv<FailedVoucher> beanToCsv = builder.withMappingStrategy(mappingStrategy).build();
			beanToCsv.write(failedVouchers);
		} catch (Exception e) {
			log.log(Level.SEVERE, "Error while generating failure report", e);
		}

	}

	private Map<String, String> mappingForCSV() {
		Map<String, String> mapping = new HashMap<>();
		mapping.put("voucherId", "Voucher ID");
		mapping.put("bu", "Business Unit");
		mapping.put("linesEntered", "Lines Entered");
		mapping.put("voucherSource", "Voucher Source");
		mapping.put("voucherCreatedBy", "Voucher Created by User");
		mapping.put("voucherCreatedOn", "Voucher Created on");
		mapping.put("postStatus", "Post Status");
		mapping.put("entryStatus", "Entry Status");
		mapping.put("supplierId", "Supplier ID");
		mapping.put("shortSupplierName", "Short Supplier Name");
		mapping.put("supplierName", "Supplier Name");
		mapping.put("invoiceNumber", "Invoice Number");
		mapping.put("invoiceDate", "Invoice Date");
		mapping.put("invoiceReceived", "Invoice Received");
		mapping.put("voucherAmount", "Voucher Amount");
		mapping.put("voucherCurrency", "Voucher Currency");
		mapping.put("approvalStatus", "Approval Status");
		mapping.put("age", "Age");
		mapping.put("approvalStatus", "Approval Status");
		mapping.put("age", "Age");
		mapping.put("failureReason", "Failure Reason");
		return mapping;
	}

}
