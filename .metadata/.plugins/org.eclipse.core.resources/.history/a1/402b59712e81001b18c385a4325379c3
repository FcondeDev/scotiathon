package com.scotiathon.voucher.helper;

import java.util.HashSet;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.scotiathon.voucher.entity.BusinessUnit;
import com.scotiathon.voucher.entity.GetBuAndVoucherId;
import com.scotiathon.voucher.entity.PassedVoucher;
import com.scotiathon.voucher.entity.Vpac;
import com.scotiathon.voucher.repository.BussinessUnitRepository;
import com.scotiathon.voucher.repository.SuccessfulVoucherRepository;

import lombok.extern.java.Log;

@Log
@Component
public class ValidationHelper {

	@Autowired
	private BussinessUnitRepository bussinessUnitRepository;

	@Autowired
	private SuccessfulVoucherRepository successfulVoucherRepository;

	private static final Float MINIMUM_AMOUNT_TO_BE_MARKED_AS_VA = 15000F;
	private static final String VA_MARK = "VA";
	private static final String BUSINESS_UNIT_VPAC = "1A001";

	public boolean validateBussinessUnit(String businessUnitCode) {
		List<BusinessUnit> businessUnitCodes = bussinessUnitRepository.findAll();
		return businessUnitCodes.stream().anyMatch(businessUnit -> businessUnit.getBu().equals(businessUnitCode));
	}

	public HashSet<String> validateDuplicateResultsInDatabase() {
		List<GetBuAndVoucherId> passedVouchers = successfulVoucherRepository.selectBuAndVoucherIdForDuplicates();
		HashSet<String> uniqueValues = new HashSet<>();
		passedVouchers.forEach(passedVoucher -> uniqueValues.add(passedVoucher.getBuPlusVoucherId()));
		return uniqueValues;

	}

	public void markingAndClassifyingSuccesVoucher(PassedVoucher successVoucher, List<Vpac> vpacRows) {

		if (successVoucher.getBu().equals(BUSINESS_UNIT_VPAC)) {
			log.info("setting location if exists..");
			Optional<Vpac> vpacRow = vpacRows.stream()
					.filter(vpac -> vpac.getSupplierId().equals(String.valueOf(successVoucher.getSupplierId())))
					.findFirst();

			if (vpacRow.isPresent())
				successVoucher.setVpacLocation(vpacRow.get().getLocation());
		}

		if (successVoucher.getVoucherAmount() > MINIMUM_AMOUNT_TO_BE_MARKED_AS_VA)
			successVoucher.setPriorityMark(VA_MARK);

	}

}
